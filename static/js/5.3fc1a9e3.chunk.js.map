{"version":3,"sources":["components/Order/Order.css","components/Order/Order.js","containers/Orders/Orders.js"],"names":["module","exports","order","ingredient","Order","props","ingredients","totalPrice","ingredientsArray","ingredientName","push","name","amount","ingredientOutput","map","react_default","a","createElement","key","className","classes","Number","parseFloat","toFixed","Orders","componentDidMount","_this","onFetchOrders","token","userId","orders","Spinner","this","loading","components_Order_Order","id","total","Component","connect","state","auth","dispatch","actions","withErrorHandler","axios"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,MAAA,sBAAAC,WAAA,uJC2BHC,EAzBD,SAACC,GAAU,IACfC,EAA4BD,EAA5BC,YAAaC,EAAeF,EAAfE,WAEfC,EAAmB,GACzB,IAAI,IAAIC,KAAkBH,EACxBE,EAAiBE,KAAK,CACpBC,KAAMF,EACNG,OAAQN,EAAYG,KAIxB,IAAMI,EAAmBL,EAAiBM,IAAI,SAACX,GAC7C,OAAOY,EAAAC,EAAAC,cAAA,QAAMC,IAAKf,EAAWQ,KAAMQ,UAAWC,IAAQjB,YACnDA,EAAWQ,KADP,KACeR,EAAWS,OAD1B,OAKT,OACEG,EAAAC,EAAAC,cAAA,OAAKE,UAAWC,IAAQlB,OACtBa,EAAAC,EAAAC,cAAA,yBAAiBJ,GACjBE,EAAAC,EAAAC,cAAA,mBAAUF,EAAAC,EAAAC,cAAA,kBAAUI,OAAOC,WAAWf,GAAYgB,QAAQ,GAAhD,2CCdVC,6MACJC,kBAAoB,WAClBC,EAAKrB,MAAMsB,cAAcD,EAAKrB,MAAMuB,MAAOF,EAAKrB,MAAMwB,iFAItD,IAAIC,EAASf,EAAAC,EAAAC,cAACc,EAAA,EAAD,MAQb,OANIC,KAAK3B,MAAM4B,UACbH,EAASE,KAAK3B,MAAMyB,OAAOhB,IAAI,SAACZ,GAC9B,OAAOa,EAAAC,EAAAC,cAACiB,EAAD,CAAOhB,IAAKhB,EAAMiC,GAAI7B,YAAaJ,EAAMI,YAAaC,WAAYL,EAAMkC,WAKjFrB,EAAAC,EAAAC,cAAA,WACGa,UAhBYO,aAuCNC,sBAjBS,SAACC,GACvB,MAAO,CACLT,OAAQS,EAAMrC,MAAM4B,OACpBG,QAASM,EAAMrC,MAAM+B,QACrBL,MAAOW,EAAMC,KAAKZ,MAClBC,OAAQU,EAAMC,KAAKX,SAII,SAACY,GAC1B,MAAO,CACLd,cAAe,SAACC,EAAOC,GACrBY,EAASC,IAAoBd,EAAOC,OAK3BS,CAA6CK,YAAiBnB,EAAQoB","file":"static/js/5.3fc1a9e3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"order\":\"Order__order__1emEB\",\"ingredient\":\"Order__ingredient__1sBGM\"};","import React from 'react';\nimport classes from './Order.css';\n\nconst Order = (props) => {\n  const { ingredients, totalPrice } = props;\n\n  const ingredientsArray = [];\n  for(let ingredientName in ingredients) {\n    ingredientsArray.push({\n      name: ingredientName,\n      amount: ingredients[ingredientName]\n    });\n  }\n\n  const ingredientOutput = ingredientsArray.map((ingredient) => {\n    return <span key={ingredient.name} className={classes.ingredient}>\n      {ingredient.name} ({ingredient.amount})\n    </span>\n  });\n\n  return (\n    <div className={classes.order}>\n      <p>Ingredients: {ingredientOutput}</p>\n      <p>Price: <strong>${Number.parseFloat(totalPrice).toFixed(2)} CAD</strong></p>\n    </div>\n  )\n}\n\nexport default Order;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport Order from '../../components/Order/Order';\nimport axios from '../../axios';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport * as actions from '../../store/actions/index';\n\nclass Orders extends Component {\n  componentDidMount = () => {\n    this.props.onFetchOrders(this.props.token, this.props.userId);\n  }\n\n  render() {\n    let orders = <Spinner />;\n\n    if(!this.props.loading) {\n      orders = this.props.orders.map((order) => {\n        return <Order key={order.id} ingredients={order.ingredients} totalPrice={order.total} />\n      })\n    }\n\n    return (\n      <div>\n        {orders}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    orders: state.order.orders,\n    loading: state.order.loading,\n    token: state.auth.token,\n    userId: state.auth.userId\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onFetchOrders: (token, userId) => {\n      dispatch(actions.fetchOrders(token, userId))\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));\n"],"sourceRoot":""}